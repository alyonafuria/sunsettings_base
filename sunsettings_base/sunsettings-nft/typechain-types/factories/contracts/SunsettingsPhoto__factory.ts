/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SunsettingsPhoto,
  SunsettingsPhotoInterface,
} from "../../contracts/SunsettingsPhoto";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280601181526020017053756e73657474696e67732050686f746f60781b8152506040518060400160405280600681526020016514d55394d15560d21b81525081600090816200006d9190620001b9565b5060016200007c8282620001b9565b5050506001600160a01b038116620000ae57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b981620000c0565b5062000285565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013d57607f821691505b6020821081036200015e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b4576000816000526020600020601f850160051c810160208610156200018f5750805b601f850160051c820191505b81811015620001b0578281556001016200019b565b5050505b505050565b81516001600160401b03811115620001d557620001d562000112565b620001ed81620001e6845462000128565b8462000164565b602080601f8311600181146200022557600084156200020c5750858301515b600019600386901b1c1916600185901b178555620001b0565b600085815260208120601f198616915b82811015620002565788860151825594840194600190910190840162000235565b5085821015620002755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61141f80620002956000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde1461021b578063c87b56dd1461022e578063d204c45e14610241578063e985e9c514610254578063f2fde38b1461026757600080fd5b8063715018a6146101e75780638da5cb5b146101ef57806395d89b4114610200578063a22cb4651461020857600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780636352211e146101b357806370a08231146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610eee565b61027a565b60405190151581526020015b60405180910390f35b6101406102a5565b60405161012f9190610f5b565b61016061015b366004610f6e565b610337565b6040516001600160a01b03909116815260200161012f565b61018b610186366004610fa3565b610360565b005b61018b61019b366004610fcd565b61036f565b61018b6101ae366004610fcd565b6103ff565b6101606101c1366004610f6e565b61041f565b6101d96101d4366004611009565b61042a565b60405190815260200161012f565b61018b610472565b6007546001600160a01b0316610160565b610140610486565b61018b610216366004611024565b610495565b61018b6102293660046110ec565b6104a0565b61014061023c366004610f6e565b6104b8565b6101d961024f366004611168565b6105c9565b6101236102623660046111ca565b610601565b61018b610275366004611009565b61062f565b60006001600160e01b03198216632483248360e11b148061029f575061029f8261066d565b92915050565b6060600080546102b4906111fd565b80601f01602080910402602001604051908101604052809291908181526020018280546102e0906111fd565b801561032d5780601f106103025761010080835404028352916020019161032d565b820191906000526020600020905b81548152906001019060200180831161031057829003601f168201915b5050505050905090565b6000610342826106bd565b506000828152600460205260409020546001600160a01b031661029f565b61036b8282336106f6565b5050565b6001600160a01b03821661039e57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103ab838333610703565b9050836001600160a01b0316816001600160a01b0316146103f9576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610395565b50505050565b61041a838383604051806020016040528060008152506104a0565b505050565b600061029f826106bd565b60006001600160a01b038216610456576040516322718ad960e21b815260006004820152602401610395565b506001600160a01b031660009081526003602052604090205490565b61047a6107fc565b6104846000610829565b565b6060600180546102b4906111fd565b61036b33838361087b565b6104ab84848461036f565b6103f9338585858561091a565b60606104c3826106bd565b50600082815260066020526040812080546104dd906111fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610509906111fd565b80156105565780601f1061052b57610100808354040283529160200191610556565b820191906000526020600020905b81548152906001019060200180831161053957829003601f168201915b50505050509050600061057460408051602081019091526000815290565b90508051600003610586575092915050565b8151156105b85780826040516020016105a0929190611237565b60405160208183030381529060405292505050919050565b6105c184610a45565b949350505050565b60006001600860008282546105de9190611266565b90915550506008546105f08482610ab9565b6105fa8184610ad3565b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6106376107fc565b6001600160a01b03811661066157604051631e4fbdf760e01b815260006004820152602401610395565b61066a81610829565b50565b60006001600160e01b031982166380ac58cd60e01b148061069e57506001600160e01b03198216635b5e139f60e01b145b8061029f57506301ffc9a760e01b6001600160e01b031983161461029f565b6000818152600260205260408120546001600160a01b03168061029f57604051637e27328960e01b815260048101849052602401610395565b61041a8383836001610b23565b6000828152600260205260408120546001600160a01b039081169083161561073057610730818486610c29565b6001600160a01b0381161561076e5761074d600085600080610b23565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b0385161561079d576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6007546001600160a01b031633146104845760405163118cdaa760e01b8152336004820152602401610395565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108ad57604051630b61174360e31b81526001600160a01b0383166004820152602401610395565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610a3e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061095c908890889087908790600401611287565b6020604051808303816000875af1925050508015610997575060408051601f3d908101601f19168201909252610994918101906112c4565b60015b610a00573d8080156109c5576040519150601f19603f3d011682016040523d82523d6000602084013e6109ca565b606091505b5080516000036109f857604051633250574960e11b81526001600160a01b0385166004820152602401610395565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610a3c57604051633250574960e11b81526001600160a01b0385166004820152602401610395565b505b5050505050565b6060610a50826106bd565b506000610a6860408051602081019091526000815290565b90506000815111610a8857604051806020016040528060008152506105fa565b80610a9284610c8d565b604051602001610aa3929190611237565b6040516020818303038152906040529392505050565b61036b828260405180602001604052806000815250610d20565b6000828152600660205260409020610aeb8282611329565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b8080610b3757506001600160a01b03821615155b15610bf9576000610b47846106bd565b90506001600160a01b03831615801590610b735750826001600160a01b0316816001600160a01b031614155b8015610b865750610b848184610601565b155b15610baf5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610395565b8115610bf75783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610c34838383610d38565b61041a576001600160a01b038316610c6257604051637e27328960e01b815260048101829052602401610395565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610395565b60606000610c9a83610d9b565b600101905060008167ffffffffffffffff811115610cba57610cba611060565b6040519080825280601f01601f191660200182016040528015610ce4576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cee57509392505050565b610d2a8383610e73565b61041a33600085858561091a565b60006001600160a01b038316158015906105c15750826001600160a01b0316846001600160a01b03161480610d725750610d728484610601565b806105c15750506000908152600460205260409020546001600160a01b03908116911614919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610dda5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e06576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e2457662386f26fc10000830492506010015b6305f5e1008310610e3c576305f5e100830492506008015b6127108310610e5057612710830492506004015b60648310610e62576064830492506002015b600a831061029f5760010192915050565b6001600160a01b038216610e9d57604051633250574960e11b815260006004820152602401610395565b6000610eab83836000610703565b90506001600160a01b0381161561041a576040516339e3563760e11b815260006004820152602401610395565b6001600160e01b03198116811461066a57600080fd5b600060208284031215610f0057600080fd5b81356105fa81610ed8565b60005b83811015610f26578181015183820152602001610f0e565b50506000910152565b60008151808452610f47816020860160208601610f0b565b601f01601f19169290920160200192915050565b6020815260006105fa6020830184610f2f565b600060208284031215610f8057600080fd5b5035919050565b80356001600160a01b0381168114610f9e57600080fd5b919050565b60008060408385031215610fb657600080fd5b610fbf83610f87565b946020939093013593505050565b600080600060608486031215610fe257600080fd5b610feb84610f87565b9250610ff960208501610f87565b9150604084013590509250925092565b60006020828403121561101b57600080fd5b6105fa82610f87565b6000806040838503121561103757600080fd5b61104083610f87565b91506020830135801515811461105557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561109157611091611060565b604051601f8501601f19908116603f011681019082821181831017156110b9576110b9611060565b816040528093508581528686860111156110d257600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561110257600080fd5b61110b85610f87565b935061111960208601610f87565b925060408501359150606085013567ffffffffffffffff81111561113c57600080fd5b8501601f8101871361114d57600080fd5b61115c87823560208401611076565b91505092959194509250565b6000806040838503121561117b57600080fd5b61118483610f87565b9150602083013567ffffffffffffffff8111156111a057600080fd5b8301601f810185136111b157600080fd5b6111c085823560208401611076565b9150509250929050565b600080604083850312156111dd57600080fd5b6111e683610f87565b91506111f460208401610f87565b90509250929050565b600181811c9082168061121157607f821691505b60208210810361123157634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611249818460208801610f0b565b83519083019061125d818360208801610f0b565b01949350505050565b8082018082111561029f57634e487b7160e01b600052601160045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112ba90830184610f2f565b9695505050505050565b6000602082840312156112d657600080fd5b81516105fa81610ed8565b601f82111561041a576000816000526020600020601f850160051c8101602086101561130a5750805b601f850160051c820191505b81811015610a3c57828155600101611316565b815167ffffffffffffffff81111561134357611343611060565b6113578161135184546111fd565b846112e1565b602080601f83116001811461138c57600084156113745750858301515b600019600386901b1c1916600185901b178555610a3c565b600085815260208120601f198616915b828110156113bb5788860151825594840194600190910190840161139c565b50858210156113d95787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122086e99a7635050ec6d2f2706ee6452ee0207295f90468a4ad99e55dde84fcd96e64736f6c63430008180033";

type SunsettingsPhotoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SunsettingsPhotoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SunsettingsPhoto__factory extends ContractFactory {
  constructor(...args: SunsettingsPhotoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SunsettingsPhoto & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SunsettingsPhoto__factory {
    return super.connect(runner) as SunsettingsPhoto__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SunsettingsPhotoInterface {
    return new Interface(_abi) as SunsettingsPhotoInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SunsettingsPhoto {
    return new Contract(address, _abi, runner) as unknown as SunsettingsPhoto;
  }
}
